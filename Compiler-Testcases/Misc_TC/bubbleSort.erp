declare module bubbleSort ;

<<module cmpExchg>>
takes input [a : integer, b : integer, desc : boolean] ;
returns [less : integer, gr : integer] ;
start
	declare cond : boolean ;
	
	cond := a > b ;
	switch (cond) start case
	true :
		less := b ;
		gr := a ;
		break ; case 	
	false :
		less := a ;
		gr := b ;

		break ; end

	switch (desc) start case
	true :
		declare temp : integer ;
		temp := less ;
		less := gr ;
		gr := temp ;

		break ; case 
	false :	
		break ; end
end


<<<driver program>>>
start
	declare left, right : integer ;
	get_value (left) ;
	get_value (right) ;

	declare arr : array [left .. right] of integer ;
	get_value (arr) ;

	declare desc : boolean ;
	get_value (desc) ;

	use module bubbleSort with parameters arr, desc ;
	print (arr) ;
end


<<module bubbleSort>>
takes input [A : array [low .. high] of integer, desc : boolean] ;
start
	declare i, j : integer ;

	i := low ;
	while (i < high)
	start
		j := low ;
		while (j < high - (i - low))
		start
			declare cmp1, cmp2, succ : integer ;
			succ := j + 1 ;

			cmp1 := A[j] ;
			cmp2 := A[succ] ;

			[cmp1, cmp2] := use module cmpExchg with parameters cmp1, cmp2, desc ;
			
			A[j] := cmp1 ;
			A[succ] := cmp2 ;

			j := j + 1 ;
		end

		i := i + 1 ;
	end
end
